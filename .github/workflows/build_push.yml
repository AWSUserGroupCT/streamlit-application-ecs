name: Go

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1          # set this to your preferred AWS region, e.g. us-west-1
  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition                                            # file, e.g. .aws/task-definition.json
  ECR_REPOSITORY: streamlit-profile-val

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:  
      imageid: ${{ steps.build-image.outputs.image }}
    steps:
    - uses: actions/checkout@v4.1.3
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ env.PRODUCTION_ACCOUNT  }}:role/ECS_FullAccess
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: ${{ secrets.SHARED_ACCOUNT_ID }}

    - id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "${{ env.ECR_REPOSITORY }}"
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: echo image id
      run: echo "${{ steps.build-image.outputs.image }}"